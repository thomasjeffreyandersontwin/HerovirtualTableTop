<UserControl x:Class="Module.HeroVirtualTabletop.AnimatedAbilities.ActiveAttackView"
              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:behaviors="clr-namespace:Framework.WPF.Behaviors;assembly=Framework.WPF"
             xmlns:abilities="clr-namespace:Module.HeroVirtualTabletop.AnimatedAbilities"             
             xmlns:enumerations="clr-namespace:Module.HeroVirtualTabletop.Library.Enumerations"
             xmlns:bindings="clr-namespace:Framework.WPF.Binding;assembly=Framework.WPF"
             xmlns:converters="clr-namespace:Module.Shared.Converters;assembly=Module.Shared"
             xmlns:localconverters="clr-namespace:Module.HeroVirtualTabletop.Library.Converters"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:forms="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"
             mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Module.Shared;Component/Resources/ResourceDictionary/GeneralResources.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <converters:EnumToBooleanConverter x:Key="EnumToBooleanConverter"/>
            <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <converters:BooleanToVisibilityInvertConverter x:Key="BooleanToVisibilityInvertConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>
    <GroupBox Header="Configure Active Attack" Foreground="White" Style="{StaticResource GroupBoxWithBlueBorderStyle}">
        <Border Background="Transparent">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                
                <StackPanel Grid.Row="0" Orientation="Vertical" Width="250" Visibility="{Binding ShowAttackSummaryText, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <TextBlock  Text="{Binding AttackSummaryText}" Foreground="White" Background="Transparent" FontWeight="Bold" TextWrapping="Wrap" />
                </StackPanel>
                <ListView Grid.Row="1" Margin="1" Name="lvAttackConfig" ItemsSource="{Binding DefendingCharacters}" Background="Transparent" BorderBrush="Transparent" ItemContainerStyle="{StaticResource ListBoxtemStyleNoHighlighting}">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <WrapPanel>
                                <GroupBox Header="{Binding Name}" Foreground="White" Style="{StaticResource GroupBoxWithBlueBorderStyle}">
                                    <GroupBox.Content>
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <CheckBox Grid.Row="0" Grid.Column="0" Content="Center Target" 
                                                      IsChecked="{Binding Path=ActiveAttackConfiguration.IsCenterTarget}" 
                                                      Command="{Binding DataContext.CenterTargetChangedCommand, 
                                                RelativeSource={RelativeSource FindAncestor, AncestorType=abilities:ActiveAttackView}}" 
                                                      CommandParameter="{Binding Path=DataContext, RelativeSource={RelativeSource Self}}" 
                                                      IsEnabled="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=abilities:ActiveAttackView}, 
                                                Path=DataContext.ActiveAttack.IsAreaEffect}" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                            <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="0" Visibility="{Binding ActiveAttackConfiguration.HasMultipleAttackers, Converter={StaticResource BooleanToVisibilityInvertConverter}}">
                                                <RadioButton x:Name="rdobtnHit" Content="Hit" IsChecked="{Binding ActiveAttackConfiguration.IsHit}" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="White" ToolTip="Hit (H)"/>
                                                <RadioButton Content="Miss" IsChecked="{Binding ActiveAttackConfiguration.IsHit, Converter={StaticResource InvertBooleanConverter}}" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="White" ToolTip="Miss (M)"/>
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="0" Visibility="{Binding ActiveAttackConfiguration.HasMultipleAttackers, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                <ListView Margin="1"  ItemsSource="{Binding ActiveAttackConfiguration.AttackResults}" Background="Transparent" BorderBrush="Transparent" ItemContainerStyle="{StaticResource ListBoxtemStyleNoHighlighting}">
                                                    <ListView.ItemTemplate>
                                                        <DataTemplate>
                                                            <StackPanel Orientation="Horizontal">
                                                                <TextBlock Text="{Binding Attacker.Name}" Foreground="White"/>
                                                                <RadioButton Content="Hit" IsChecked="{Binding IsHit}" HorizontalAlignment="Left" VerticalAlignment="Center"
                                                                             behaviors:CommandBehavior.Event="Checked" 
                                                                             behaviors:CommandBehavior.Command="{Binding DataContext.AttackHitChangedCommand, 
                                                RelativeSource={RelativeSource FindAncestor, AncestorType=abilities:ActiveAttackView}}"
                                                                             behaviors:CommandBehavior.CommandParameter="{Binding Path=DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=GroupBox}}" 
                                                                             Foreground="White" ToolTip="Hit (H)"/>
                                                                <RadioButton Content="Miss" IsChecked="{Binding IsHit, Converter={StaticResource InvertBooleanConverter}}" 
                                                                             behaviors:CommandBehavior.Event="Checked"
                                                                             behaviors:CommandBehavior.Command="{Binding DataContext.AttackHitChangedCommand, 
                                                RelativeSource={RelativeSource FindAncestor, AncestorType=abilities:ActiveAttackView}}"
                                                                             behaviors:CommandBehavior.CommandParameter="{Binding Path=DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=GroupBox}}"
                                                                             HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="White" ToolTip="Miss (M)"/>
                                                            </StackPanel>
                                                        </DataTemplate>
                                                    </ListView.ItemTemplate>
                                                </ListView>
                                            </StackPanel>
                                            <StackPanel Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal">
                                                <CheckBox IsChecked="{Binding Path=ActiveAttackConfiguration.IsStunned}" Content="Stunned" Foreground="White"  HorizontalAlignment="Left" 
                                                          IsEnabled="{Binding Path=ActiveAttackConfiguration.IsHit}" ToolTip="Stunned (S)"/>
                                                <CheckBox IsChecked="{Binding Path=ActiveAttackConfiguration.IsUnconcious}" Content="Unconcious" Foreground="White"  HorizontalAlignment="Left" 
                                                          IsEnabled="{Binding Path=ActiveAttackConfiguration.IsHit}" ToolTip="Unconscious (U)"/>
                                                <CheckBox IsChecked="{Binding Path=ActiveAttackConfiguration.IsDying}" Content="Dying" Foreground="White"  HorizontalAlignment="Left" 
                                                          IsEnabled="{Binding Path=ActiveAttackConfiguration.IsHit}" ToolTip="Dying (Y)"/>
                                                <CheckBox IsChecked="{Binding Path=ActiveAttackConfiguration.IsDead}" Content="Dead" Foreground="White"  HorizontalAlignment="Left" 
                                                          IsEnabled="{Binding Path=ActiveAttackConfiguration.IsHit}" ToolTip="Dead (D)"/>

                                            </StackPanel>
                                            <StackPanel Grid.Row="3" Grid.Column="0" Orientation="Horizontal">
                                                <RadioButton Content="KnockBack" 
                                                             IsChecked="{Binding ActiveAttackConfiguration.IsKnockedBack}" 
                                                             IsEnabled="{Binding Path=ActiveAttackConfiguration.IsHit}"
                                                             HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="White" ToolTip="Knockback (B)"/>
                                                <xctk:IntegerUpDown Increment="1" DefaultValue="0" Minimum="0" Value="{Binding ActiveAttackConfiguration.KnockBackDistance}" 
                                                                    IsEnabled="{Binding ElementName=rdobtnKnockBack, Path=IsChecked}" ToolTip="Enter a number"/>
                                                <RadioButton Content="Knocked Down" IsChecked="{Binding ActiveAttackConfiguration.IsKnockedBack, Converter={StaticResource InvertBooleanConverter}}" 
                                                             IsEnabled="{Binding Path=ActiveAttackConfiguration.IsHit}"
                                                             HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="White" ToolTip="Knocked Down (K)"/>
                                            </StackPanel>
                                        </Grid>
                                    </GroupBox.Content>
                                </GroupBox>
                            </WrapPanel>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                <StackPanel Grid.Row="2" Orientation="Horizontal">
                    <CheckBox IsChecked="{Binding Path=DefendingCharacters[0].ActiveAttackConfiguration.MoveAttackerToTarget}" Content="Move to target before attacking" Foreground="White"  HorizontalAlignment="Left" 
                                                          ToolTip="Move to target before attacking (T)"/>
                </StackPanel>
                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal" Grid.Row="3" Grid.ColumnSpan="2">
                    <Button x:Name="btnOk"  Margin="2" Content="OK" Command="{Binding SetActiveAttackCommand}" Style="{StaticResource ButtonDefaultStyle}"/>
                    <Button x:Name="btnCancel"  Margin="2"  Content="Cancel" Command="{Binding CancelActiveAttackCommand}" Style="{StaticResource ButtonDefaultStyle}"/>
                </StackPanel>
            </Grid>
            <behaviors:CommandBehaviorCollection.Behaviors>
                <behaviors:BehaviorBinding Event="PreviewMouseDown" Command="{Binding ActivatePanelCommand}" CommandParameter="ActiveAttackWidget"/>
            </behaviors:CommandBehaviorCollection.Behaviors>
        </Border>
        <behaviors:CommandBehaviorCollection.Behaviors>
            <behaviors:BehaviorBinding Event="GotFocus" Command="{Binding ActivatePanelCommand}" CommandParameter="ActiveAttackWidget"/>
            <behaviors:BehaviorBinding Event="LostFocus" Command="{Binding DeactivatePanelCommand}" CommandParameter="ActiveAttackWidget"/>
        </behaviors:CommandBehaviorCollection.Behaviors>
    </GroupBox>


</UserControl>
