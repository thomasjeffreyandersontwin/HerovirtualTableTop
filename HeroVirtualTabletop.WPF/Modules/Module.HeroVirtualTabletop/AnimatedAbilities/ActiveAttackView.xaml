<UserControl x:Class="Module.HeroVirtualTabletop.AnimatedAbilities.ActiveAttackView"
              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:behaviors="clr-namespace:Framework.WPF.Behaviors;assembly=Framework.WPF"
             xmlns:abilities="clr-namespace:Module.HeroVirtualTabletop.AnimatedAbilities"             
             xmlns:enumerations="clr-namespace:Module.HeroVirtualTabletop.Library.Enumerations"
             xmlns:bindings="clr-namespace:Framework.WPF.Binding;assembly=Framework.WPF"
             xmlns:converters="clr-namespace:Module.Shared.Converters;assembly=Module.Shared"
             xmlns:localconverters="clr-namespace:Module.HeroVirtualTabletop.Library.Converters"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:forms="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"
             mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Module.Shared;Component/Resources/ResourceDictionary/GeneralResources.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <converters:EnumToBooleanConverter x:Key="EnumToBooleanConverter"/>
            <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <converters:BooleanToVisibilityInvertConverter x:Key="BooleanToVisibilityInvertConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>
    <GroupBox Header="Configure Active Attack" Foreground="White" Style="{StaticResource GroupBoxWithBlueBorderStyle}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <ListView Grid.Row="0" Margin="1" Name="lvAttackConfig" ItemsSource="{Binding DefendingCharacters}" Background="Transparent" BorderBrush="Transparent" ItemContainerStyle="{StaticResource ListBoxtemStyleNoHighlighting}">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <WrapPanel>
                            <GroupBox Header="{Binding Name}" Foreground="White" Style="{StaticResource GroupBoxWithBlueBorderStyle}">
                                <GroupBox.Content>
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <CheckBox Grid.Row="0" Grid.Column="0" Content="Center Target" IsChecked="{Binding Path=ActiveAttackConfiguration.IsCenterTarget}" Command="{Binding DataContext.CenterTargetChangedCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=abilities:ActiveAttackView}}" CommandParameter="{Binding Path=DataContext, RelativeSource={RelativeSource Self}}" IsEnabled="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=abilities:ActiveAttackView}, Path=DataContext.ActiveAttack.IsAreaEffect}" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                        <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="0">
                                            <RadioButton Content="Hit" IsChecked="{Binding Path=ActiveAttackConfiguration.AttackResult, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Hit}" GroupName="AttackResultGroup" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="White"/>
                                            <RadioButton Content="Miss" IsChecked="{Binding Path=ActiveAttackConfiguration.AttackResult, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Miss}" GroupName="AttackResultGroup" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="White"/>
                                        </StackPanel>
                                        <StackPanel Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal">
                                            <!--<RadioButton IsChecked="{Binding Path=ActiveAttackConfiguration.AttackEffectOption, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=None}" Content="None" GroupName="AttackEffectGroup" Foreground="White"  HorizontalAlignment="Left" IsEnabled="{Binding Path=ActiveAttackConfiguration.AttackResult, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Hit}"/>
                                            <RadioButton IsChecked="{Binding Path=ActiveAttackConfiguration.AttackEffectOption, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Stunned}" Content="Stunned" GroupName="AttackEffectGroup" Foreground="White"  HorizontalAlignment="Left" IsEnabled="{Binding Path=ActiveAttackConfiguration.AttackResult, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Hit}"/>
                                            <RadioButton IsChecked="{Binding Path=ActiveAttackConfiguration.AttackEffectOption, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Unconcious}" Content="Unconcious" GroupName="AttackEffectGroup" Foreground="White"  HorizontalAlignment="Left" IsEnabled="{Binding Path=ActiveAttackConfiguration.AttackResult, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Hit}"/>
                                            <RadioButton IsChecked="{Binding Path=ActiveAttackConfiguration.AttackEffectOption, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Dying}" Content="Dying" GroupName="AttackEffectGroup" Foreground="White"  HorizontalAlignment="Left" IsEnabled="{Binding Path=ActiveAttackConfiguration.AttackResult, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Hit}"/>
                                            <RadioButton IsChecked="{Binding Path=ActiveAttackConfiguration.AttackEffectOption, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Dead}" Content="Dead" GroupName="AttackEffectGroup" Foreground="White"  HorizontalAlignment="Left" IsEnabled="{Binding Path=ActiveAttackConfiguration.AttackResult, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Hit}"/>-->
                                            <!--<CheckBox IsChecked="{Binding Path=ActiveAttackConfiguration.AttackEffectOption, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=None}" Content="None" Foreground="White"  HorizontalAlignment="Left" IsEnabled="{Binding Path=ActiveAttackConfiguration.AttackResult, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Hit}"/>-->
                                            <CheckBox IsChecked="{Binding Path=ActiveAttackConfiguration.IsStunned}" Content="Stunned" Foreground="White"  HorizontalAlignment="Left" IsEnabled="{Binding Path=ActiveAttackConfiguration.AttackResult, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Hit}"/>
                                            <CheckBox IsChecked="{Binding Path=ActiveAttackConfiguration.IsUnconcious}" Content="Unconcious" Foreground="White"  HorizontalAlignment="Left" IsEnabled="{Binding Path=ActiveAttackConfiguration.AttackResult, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Hit}"/>
                                            <CheckBox IsChecked="{Binding Path=ActiveAttackConfiguration.IsDying}" Content="Dying" Foreground="White"  HorizontalAlignment="Left" IsEnabled="{Binding Path=ActiveAttackConfiguration.AttackResult, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Hit}"/>
                                            <CheckBox IsChecked="{Binding Path=ActiveAttackConfiguration.IsDead}" Content="Dead" Foreground="White"  HorizontalAlignment="Left" IsEnabled="{Binding Path=ActiveAttackConfiguration.AttackResult, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Hit}"/>

                                        </StackPanel>
                                        <StackPanel Grid.Row="3" Grid.Column="0" Orientation="Horizontal">
                                            <RadioButton Name="rdobtnKnockBack" Content="KnockBack" IsChecked="{Binding Path=ActiveAttackConfiguration.KnockBackOption, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=KnockBack}" IsEnabled="{Binding Path=ActiveAttackConfiguration.AttackResult, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Hit}" GroupName="KnockBackGroup" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="White"/>
                                            <xctk:IntegerUpDown Increment="1" DefaultValue="0" Minimum="0" Value="{Binding ActiveAttackConfiguration.KnockBackDistance}" IsEnabled="{Binding ElementName=rdobtnKnockBack, Path=IsChecked}"/>
                                            <RadioButton Content="Knocked Down" IsChecked="{Binding Path=ActiveAttackConfiguration.KnockBackOption, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=KnockDown}" IsEnabled="{Binding Path=ActiveAttackConfiguration.AttackResult, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Hit}" GroupName="KnockBackGroup" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="White"/>
                                        </StackPanel>
                                    </Grid>
                                </GroupBox.Content>
                            </GroupBox>
                        </WrapPanel>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            <StackPanel HorizontalAlignment="Right" Orientation="Horizontal" Grid.Row="1" Grid.ColumnSpan="2">
                <Button x:Name="btnOk"  Margin="2" Content="OK" Command="{Binding SetActiveAttackCommand}" Style="{StaticResource ButtonDefaultStyle}"/>
                <Button x:Name="btnCancel"  Margin="2"  Content="Cancel" Command="{Binding CancelActiveAttackCommand}" Style="{StaticResource ButtonDefaultStyle}"/>
            </StackPanel>
        </Grid>
    </GroupBox>


</UserControl>
